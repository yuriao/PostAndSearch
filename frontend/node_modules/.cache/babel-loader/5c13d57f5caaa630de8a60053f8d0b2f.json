{"ast":null,"code":"var _jsxFileName = \"D:\\\\laioffer_project\\\\Circle-main\\\\Circle-main\\\\Circle\\\\frontend\\\\src\\\\components\\\\CreatePostButton.js\";\nimport React, { Component, createRef } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport axios from \"axios\";\nimport { PostForm } from \"./PostForm\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass CreatePostButton extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      visible: false,\n      confirmLoading: false\n    };\n\n    this.showModal = () => {\n      this.setState({\n        visible: true\n      });\n    };\n\n    this.handleOk = () => {\n      this.setState({\n        confirmLoading: true\n      }); // get form data\n\n      this.postForm.validateFields().then(form => {\n        const {\n          description,\n          uploadPost\n        } = form;\n        const {\n          type,\n          originFileObj\n        } = uploadPost[0];\n        const postType = type.match(/^(image|video)/g)[0];\n\n        if (postType) {\n          let formData = new FormData();\n          formData.append(\"message\", description);\n          formData.append(\"media_file\", originFileObj);\n          console.log(description);\n          const opt = {\n            method: \"POST\",\n            url: `${BASE_URL}/upload`,\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n            },\n            data: formData\n          };\n          axios(opt).then(res => {\n            if (res.status === 200) {\n              message.success(\"The image/video is uploaded!\");\n              this.postForm.resetFields();\n              this.handleCancel();\n              this.props.onShowPost(postType);\n              this.setState({\n                confirmLoading: false\n              });\n            }\n          }).catch(err => {\n            console.log(\"Upload image/video failed: \", err.message);\n            message.error(\"Failed to upload image/video!\");\n            this.setState({\n              confirmLoading: false\n            });\n          });\n        }\n      }).catch(err => {\n        console.log(\"err ir validate form -> \", err);\n      });\n    };\n\n    this.handleCancel = () => {\n      console.log(\"Clicked cancel button\");\n      this.setState({\n        visible: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      visible,\n      confirmLoading\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: this.showModal,\n        children: \"Create New Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Modal, {\n        title: \"Create New Post\",\n        visible: visible,\n        onOk: this.handleOk,\n        okText: \"Create\",\n        confirmLoading: confirmLoading,\n        onCancel: this.handleCancel,\n        children: /*#__PURE__*/_jsxDEV(PostForm, {\n          ref: refInstance => this.postForm = refInstance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CreatePostButton;","map":{"version":3,"sources":["D:/laioffer_project/Circle-main/Circle-main/Circle/frontend/src/components/CreatePostButton.js"],"names":["React","Component","createRef","Modal","Button","message","axios","PostForm","BASE_URL","TOKEN_KEY","CreatePostButton","state","visible","confirmLoading","showModal","setState","handleOk","postForm","validateFields","then","form","description","uploadPost","type","originFileObj","postType","match","formData","FormData","append","console","log","opt","method","url","headers","Authorization","localStorage","getItem","data","res","status","success","resetFields","handleCancel","props","onShowPost","catch","err","error","render","refInstance"],"mappings":"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","sourcesContent":["import React, { Component, createRef } from \"react\";\nimport { Modal, Button, message } from \"antd\";\nimport axios from \"axios\";\n\nimport { PostForm } from \"./PostForm\";\nimport { BASE_URL, TOKEN_KEY } from \"../constants\";\n\nclass CreatePostButton extends Component {\n  state = {\n    visible: false,\n    confirmLoading: false\n  };\n\n  showModal = () => {\n    this.setState({\n      visible: true\n    });\n  };\n\n  handleOk = () => {\n    this.setState({\n      confirmLoading: true\n    });\n\n    // get form data\n    this.postForm\n      .validateFields()\n      .then((form) => {\n        const { description, uploadPost } = form;\n        const { type, originFileObj } = uploadPost[0];\n        const postType = type.match(/^(image|video)/g)[0];\n        if (postType) {\n          let formData = new FormData();\n          formData.append(\"message\", description);\n          formData.append(\"media_file\", originFileObj);\n          console.log(description)\n          const opt = {\n            method: \"POST\",\n            url: `${BASE_URL}/upload`,\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(TOKEN_KEY)}`\n            },\n            data: formData\n          };\n\n          \n          axios(opt)\n            .then((res) => {\n              if (res.status === 200) {\n                message.success(\"The image/video is uploaded!\");\n                this.postForm.resetFields();\n                this.handleCancel();\n                this.props.onShowPost(postType);\n                this.setState({ confirmLoading: false });\n              }\n            })\n            .catch((err) => {\n              console.log(\"Upload image/video failed: \", err.message);\n              message.error(\"Failed to upload image/video!\");\n              this.setState({ confirmLoading: false });\n            });\n        }\n      })\n      .catch((err) => {\n        console.log(\"err ir validate form -> \", err);\n      });\n  };\n\n  handleCancel = () => {\n    console.log(\"Clicked cancel button\");\n    this.setState({\n      visible: false\n    });\n  };\n\n  render() {\n    const { visible, confirmLoading } = this.state;\n    return (\n      <div>\n        <Button type=\"primary\" onClick={this.showModal}>\n          Create New Post\n        </Button>\n        <Modal\n          title=\"Create New Post\"\n          visible={visible}\n          onOk={this.handleOk}\n          okText=\"Create\"\n          confirmLoading={confirmLoading}\n          onCancel={this.handleCancel}\n        >\n          <PostForm ref={(refInstance) => (this.postForm = refInstance)} />\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default CreatePostButton;\n"]},"metadata":{},"sourceType":"module"}